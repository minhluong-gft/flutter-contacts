// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_contacts/test/screens/contacts/contacts_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_contacts/models/contact.dart' as _i2;
import 'package:flutter_contacts/repositories/contacts_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeContact_0 extends _i1.SmartFake implements _i2.Contact {
  _FakeContact_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContactsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsRepository extends _i1.Mock
    implements _i3.ContactsRepository {
  @override
  _i4.Future<List<_i2.Contact>> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Contact>>.value(<_i2.Contact>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Contact>>.value(<_i2.Contact>[]),
      ) as _i4.Future<List<_i2.Contact>>);

  @override
  _i4.Future<_i2.Contact> getContact(String? contactId) => (super.noSuchMethod(
        Invocation.method(
          #getContact,
          [contactId],
        ),
        returnValue: _i4.Future<_i2.Contact>.value(_FakeContact_0(
          this,
          Invocation.method(
            #getContact,
            [contactId],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Contact>.value(_FakeContact_0(
          this,
          Invocation.method(
            #getContact,
            [contactId],
          ),
        )),
      ) as _i4.Future<_i2.Contact>);

  @override
  _i4.Future<_i2.Contact> addContact({
    required String? fullName,
    required String? email,
    String? avatar,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContact,
          [],
          {
            #fullName: fullName,
            #email: email,
            #avatar: avatar,
          },
        ),
        returnValue: _i4.Future<_i2.Contact>.value(_FakeContact_0(
          this,
          Invocation.method(
            #addContact,
            [],
            {
              #fullName: fullName,
              #email: email,
              #avatar: avatar,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Contact>.value(_FakeContact_0(
          this,
          Invocation.method(
            #addContact,
            [],
            {
              #fullName: fullName,
              #email: email,
              #avatar: avatar,
            },
          ),
        )),
      ) as _i4.Future<_i2.Contact>);

  @override
  _i4.Future<void> deleteContact(String? contactId) => (super.noSuchMethod(
        Invocation.method(
          #deleteContact,
          [contactId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setContactFavorite(
    String? contactId,
    bool? isFavorite,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setContactFavorite,
          [
            contactId,
            isFavorite,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
